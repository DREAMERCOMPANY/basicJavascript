¿Como funciona la memoria en JS?
    -Intentar copiar objetos en JS
    -Los objetos son referencias a un espacio en memoria
    -Cuando se copia un objeto lo que se copia es su referencia en memoria
    -memoria stack, se guardan los valores en la memoria
    -Los objetos se guardan en la memoria Heap
    -Las variables se guardan en la memoria stack
    -La memoria Heap es mas lenta que la variable Stack
    -Con strings, numeros los valores se guardan en la memoria Stack
    -Hay formas de copiar objetos, con el shallow copy y con el deep copy

Que es JSON.parse y JSON.stringify?
    -Se pueden crear copias de objetos que apuntas a diferentes referencias en memoria pero no se puede trabajar con metodos.

Que es recursividad?
    -Es cuando una funcion se llama a si misma

Deep copy con recursividad
    -Uno de sus usos es para copiar objetos

Factory pattern y RORO:
    -Una funcion puede recibir un objeto y asi mismo, retorna un objeto
    -dentro de los parametros que recibe una funcion , a los parametros se les puede asignar otra funcion que valide si el parametro existe

Abstraccion con objetos literales y deep copy:
    - Abstraccion y encapsulamiento sin prototipos

Module Pattern y Namespaces:
    -Javascript no es un lenguaje fuertemente tipado lo cual lo hace flexible
    -En JS no existen metodo
    -Con ñas factory functions se pueden crear propiedades privadas

Getters y setters:
    -Cuando utilizamos getters y setters es como si ya no tuvieramos un atributo writable y value

¿Que es duck typing?:
    -Hay que tener parametros para saber quien es quien

Instance of en Javascript con instancias y prototipos:
    -DONE

Atributos y metodos privados en JS:
    -
    


    